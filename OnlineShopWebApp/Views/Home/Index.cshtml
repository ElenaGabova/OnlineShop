@using ViewModels
@model List<ProductViewModel>
@{
    ViewData["Title"] = "Главная страница";
    TextPageViewModel textPageViewModel = ViewBag.TextPageModel;
    List<DanceDirectionViewModel> danceDirectionsViewModels = ViewBag.DanseDirectionViewModel;
}

<br />
@if(danceDirectionsViewModels.Count > 0)
{
    <div id="carouselExampleDark" class="carousel slide" data-ride="carousel">
      <ol class="carousel-indicators">
      </ol>
      <div class="carousel-inner">
        <div class="carousel-item active">
            <div class="row justify-content-md-center">
                   @await Html.PartialAsync("DirectionsBody", danceDirectionsViewModels[0])
                   @await Html.PartialAsync("DirectionsBody", danceDirectionsViewModels[1])
            </div>
         </div> 
         <div class="carousel-item ">
            <div class="row justify-content-md-center">
                   @await Html.PartialAsync("DirectionsBody", danceDirectionsViewModels[2])
                   @await Html.PartialAsync("DirectionsBody", danceDirectionsViewModels[3])
             </div>
         </div>
     </div>

      <a class="carousel-control-prev" href="#carouselExampleDark" data-bs-target="#carouselExampleDark"  role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" style = "color:black" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
      </a>
      <a class="carousel-control-next"  href="#carouselExampleDark" data-bs-target="#carouselExampleDark"  role="button" data-slide="next">
        <span class="carousel-control-next-icon" style = "color:black"aria-hidden="true"></span>
        <span class="sr-only">Next</span>
      </a>
    </div>  
}

<br />
<br />
@if (Model.Count > 0)
{
    <div id="carouselExampleDark2" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
        </ol>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <div class="row justify-content-md-center">
                    @await Html.PartialAsync("CardBody", Model[0])
                    @await Html.PartialAsync("CardBody", Model[1])
                </div>
            </div> 
            <div class="carousel-item ">
                <div class="row justify-content-md-center">
                    @await Html.PartialAsync("CardBody", Model[2])
                    @await Html.PartialAsync("CardBody", Model[3])
                </div>
            </div>
        </div>

        <a class="carousel-control-prev" href="#carouselExampleDark2" data-bs-target="#carouselExampleDark2"  role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" style = "color:black" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next"  href="#carouselExampleDark2" data-bs-target="#carouselExampleDark2"  role="button" data-slide="next">
            <span class="carousel-control-next-icon" style = "color:black"aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
}
<br />
 @await Html.PartialAsync("Directions", textPageViewModel)